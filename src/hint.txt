<mat-card class="container">
  <mat-card-header (click)="onClose()">
    <!-- Reservation Information -->
    <mat-card-subtitle>
      <span
        class="color-circle"
        [ngClass]="{
          'circle-pl': reservation?.type === 'PL',
          'circle-ua': reservation?.type === 'UA',
          'circle-inne': reservation?.type === 'Other'
        }"
      ></span>
      <span>{{ reservation?.date | date : "dd.MM.yyyy" }}</span>
      | Time:
      <span>{{ reservation?.startHour }} - {{ reservation?.endHour }}</span>
    </mat-card-subtitle>

    <!-- Close Button -->
    <button mat-icon-button class="close-button" (click)="onClose()">
      <mat-icon>close</mat-icon>
    </button>
  </mat-card-header>

  <mat-card-content>
    <!-- Place -->
    <div>
      <p><strong>Place:</strong> {{ reservation?.place }}</p>
    </div>

    <!-- <p><strong>Type:</strong> {{ reservation?.type }}</p> -->

    <!-- <p><strong>Status:</strong> {{ reservation?.status || "Pending" }}</p> -->

    <p><strong>Reservator:</strong> {{ reservation?.user?.name }}</p>

    <!-- <p><strong>Contact:</strong> {{ reservation?.user?.email }}</p> -->

    <p><strong>Comment:</strong> {{ reservation?.comments }}</p>

    <p>
      <strong>Created:</strong>
      {{ reservation?.createdAt | date : "HH.mm | dd.MM.yyyy" }}
    </p>

    <!-- <p>
      <strong>Last update:</strong>
      {{ reservation?.updatedAt | date : "HH.mm | dd.MM.yyyy" }}
    </p> -->
  </mat-card-content>

  <ng-container
    *ngIf="
      currentUser?.id === reservation?.user?.id ||
      currentUser?.role === 'moderator' ||
      currentUser?.role == 'admin'
    "
  >
    <mat-card-actions align="end">
      <!-- Type button to open submenu -->
      <button
        mat-menu-item
        [matMenuTriggerFor]="typeMenu"
        aria-label="Change type"
      >
        <mat-icon>category</mat-icon>
      </button>

      <!-- Submenu for type selection -->
      <mat-menu #typeMenu="matMenu">
        <button mat-menu-item (click)="typeUA()">
          <span class="color-circle" [ngClass]="'circle-ua'"></span>
          <span>UA</span>
        </button>
        <button mat-menu-item (click)="typePl()">
          <span class="color-circle" [ngClass]="'circle-pl'"></span>
          <span>PL</span>
        </button>
        <button mat-menu-item (click)="typeOther()">
          <span class="color-circle" [ngClass]="'circle-inne'"></span>
          <span>Other</span>
        </button>
      </mat-menu>

      <ng-container
        *ngIf="
          currentUser?.role === 'admin' || currentUser?.role === 'moderator'
        "
      >
        <!-- Approve -->
        <button
          mat-button
          color="primary"
          (click)="approve()"
          [disabled]="reservation?.status === 'Approved'"
        >
          <mat-icon>check_circle</mat-icon>
        </button>
        <!-- Pending -->
        <button
          mat-button
          color="primary"
          (click)="pending()"
          [disabled]="reservation?.status === 'Pending'"
        >
          <mat-icon>hourglass_bottom</mat-icon>
        </button>
      </ng-container>

      <!-- Edit -->
      <button mat-button color="primary" (click)="edit()" disabled>
        <mat-icon>edit</mat-icon>
      </button>
      <!-- Delete -->
      <button mat-button color="warn" (click)="delete()">
        <mat-icon>delete</mat-icon>
      </button>
    </mat-card-actions>
  </ng-container>
</mat-card>

.container {
  width: inherit;
  margin: 0px 0px 1rem;
  background-color: white;
  //   scroll-behavior: smooth; /* Makes scrolling smooth */
}

mat-card {
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  // margin: 0px;
}

mat-card-header {
  background-color: #f5f5f5;
  padding: 10px 10px;
  margin-bottom: 15px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

mat-card-title {
  font-size: 1.2em;
  font-weight: bold;
}

mat-card-subtitle {
  font-size: 0.9em;
  color: #666;
}

mat-card-content p {
  margin-bottom: 8px;
}

mat-card-actions {
  display: flex;
  justify-content: space-around;
  padding: 10px 20px;
}

span {
  margin-right: 5px;
  font-weight: bold;
}

strong {
  font-weight: bold;
}

/* Basic styling for the color circle */
.color-circle {
  display: inline-block;
  width: 15px; /* Size of the circle */
  height: 15px; /* Size of the circle */
  border-radius: 50%; /* Make it a circle */
  border: #000000 solid 0.5px;
  margin-right: 8px; /* Space between the circle and text */
}

/* Flag for Poland (white and red) */
.circle-pl {
  background: linear-gradient(
    to bottom,
    white 50%,
    #f44336 50%
  ); /* Poland flag */
}

/* Flag for Ukraine (blue and yellow) */
.circle-ua {
  background: linear-gradient(
    to bottom,
    #1976d2 50%,
    #ffd700 50%
  ); /* Ukraine flag */
}

/* Generic or Other flag (gray) */
.circle-inne {
  background-color: #9e9e9e; /* Gray for Other */
}
